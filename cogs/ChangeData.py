import disnake
from disnake.ext import commands
import datetime
import json
import os

config_path = os.path.join(os.path.dirname(__file__), '..', 'config.json')

with open(config_path) as config:
    config = json.load(config)

channel = config['channels']['ChangeData']
highstaff = config['roles']['HighStaff']


class ChangeData(commands.Cog):
    def __init__(self, bot):
        self.bot = bot

    @commands.slash_command()
    async def —Å–º–µ–Ω–∞_–¥–∞–Ω–Ω—ã—Ö(self, inter, —Å—Ç–∞—Ä—ã–µ_–¥–∞–Ω–Ω—ã–µ: str, –Ω–æ–≤—ã–µ_–¥–∞–Ω–Ω—ã–µ: str):
        channel_id = inter.channel.id
        if channel_id != channel:
            error_emb = disnake.Embed(
                title="–û—à–∏–±–∫–∞",
                description=f"–î–∞–Ω–Ω—É—é –∫–æ–º–∞–Ω–¥—É –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ –≤ <#{channel}>",
                color = 0xDA373C,
                timestamp=datetime.datetime.now()
            )
            await inter.response.send_message(embed=error_emb, ephemeral=True)
        else:
           emb = disnake.Embed(
               title="–°–º–µ–Ω–∞ –¥–∞–Ω–Ω—ã—Ö",
               color = 0x2B2D31,
               timestamp=datetime.datetime.now()
           )
           emb.add_field(name="–°–æ—Ç—Ä—É–¥–Ω–∏–∫: ", value=f"<@{inter.author.id}>", inline=False)
           emb.add_field(name="–°—Ç–∞—Ä—ã–µ –¥–∞–Ω–Ω—ã–µ: ", value=f"{—Å—Ç–∞—Ä—ã–µ_–¥–∞–Ω–Ω—ã–µ}", inline=True)
           emb.add_field(name="–ù–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ: ", value=f"{–Ω–æ–≤—ã–µ_–¥–∞–Ω–Ω—ã–µ}", inline=True)
           ChannelObject = disnake.utils.get(inter.guild.channels, id=channel)
           await ChannelObject.send(f"<@&{highstaff}> —Ä–∞—Å—Å–º–æ—Ç—Ä–∏—Ç–µ –∑–∞—è–≤–ª–µ–Ω–∏–µ –æ—Ç {inter.author.mention}", embed=emb, components=[
           disnake.ui.Button(label="–û–¥–æ–±—Ä–∏—Ç—å", style=disnake.ButtonStyle.success, custom_id="Approve"),
           disnake.ui.Button(label="–û—Ç–∫–ª–æ–Ω–∏—Ç—å", style=disnake.ButtonStyle.danger, custom_id="Reject")
       ],)
           await inter.send("**üü¢ –í—ã —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ –∑–∞–ø—Ä–æ—Å!**", ephemeral=True)



def setup(bot: commands.Bot):
    bot.add_cog(ChangeData(bot))