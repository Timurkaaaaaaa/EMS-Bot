import datetime
import disnake
from disnake.ext import commands
from disnake import TextInputStyle

import datetime
import json
import os

import sqlite3


connection = sqlite3.connect('Defibrillator.db')
cursor = connection.cursor()

cursor.execute('''
CREATE TABLE IF NOT EXISTS DefibrillatorReport (
received INTEGER,
issued INTEGER,
link TEXT
)
''')

connection.commit()

config_path = os.path.join(os.path.dirname(__file__), '..', 'config.json')

with open(config_path) as config:
    config = json.load(config)

channel = config['channels']['DefibrillatorReport']
highstaff = config['roles']['HighStaff']
HeadPhysician = config['roles']['HeadPhysician']
DeputyHeadPhysician = config['roles']['DeputyHeadPhysician']

class DefibrillatorReportModal(disnake.ui.Modal):
    def __init__(self):
        # –î–µ—Ç–∞–ª–∏ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –∏ –µ–≥–æ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
        components = [
            disnake.ui.TextInput(
                label="–ù–æ–º–µ—Ä –¥–µ—Ñ–∏–±—Ä–∏–ª–ª—è—Ç–æ—Ä–∞",
                placeholder="–ü—Ä–∏–º–µ—Ä: EMS-ABC12345-123456",
                custom_id="–ù–æ–º–µ—Ä –¥–µ—Ñ–∏–±—Ä–∏–ª–ª—è—Ç–æ—Ä–∞:",
                style=TextInputStyle.short,
                max_length=100,
            ),
            disnake.ui.TextInput(
                label="–°—Å—ã–ª–∫–∞ –Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ",
                placeholder="–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å –∏–Ω–≤–µ–Ω—Ç–∞—Ä—ë–º",
                custom_id="–°—Å—ã–ª–∫–∞ –Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ:",
                style=TextInputStyle.short,
                max_length=1024,
            )
        ]
        super().__init__(
            title="–û—Ç—á—ë—Ç –æ –≤—ã–¥–∞—á–µ –¥–µ—Ñ–∏–±—Ä–∏–ª–ª—è—Ç–æ—Ä–∞",
            custom_id="DefibrillatorReportModal",
            components=components,
        )

    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–≤–µ—Ç–∞, –ø–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
    async def callback(self, inter: disnake.ModalInteraction):
        embed = disnake.Embed(
            title="–û—Ç—á—ë—Ç –ø–æ –≤—ã–¥–∞—á–µ",
            color=0x2B2D31
        )

        cursor.execute('SELECT received, link FROM DefibrillatorReport WHERE issued = ?', (inter.author.id,))
        data = cursor.fetchall()
        cursor.execute('DELETE FROM DefibrillatorReport WHERE issued = ?', (inter.author.id,))

        recieved = data[0][0]
        link = data[0][1]

        embed.add_field(
                name="–°–æ—Ç—Ä—É–¥–Ω–∏–∫ –≤—ã–¥–∞–≤—à–∏–π:",
                value=f"{inter.author.mention}",
                inline=True,
            )
        embed.add_field(
                name="–°–æ—Ç—Ä—É–¥–Ω–∏–∫ –ø–æ–ª—É—á–∏–≤—à–∏–π:",
                value=f"<@&{recieved}>",
                inline=True,
            )
        embed.add_field(
                name="–ó–∞–ø—Ä–æ—Å –Ω–∞ –ø–æ–ª—É—á–µ–Ω–∏–µ:",
                value=f"{link}",
                inline=True,
            )
        embed.add_field(
                name="–î–µ–π—Å—Ç–≤–∏–µ:",
                value="–í—ã–¥–∞–ª",
                inline=False,
            )
        for key, value in inter.text_values.items():
            embed.add_field(
                name=key.capitalize(),
                value=value[:1024],
                inline=False,
            )
        channelObj = disnake.utils.get(inter.guild.channels, id=channel)
        await channelObj.send(embed=embed)
        await inter.send("**üü¢ –í—ã —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ –æ—Ç—á—ë—Ç!**", ephemeral=True)


class DefibrillatorApproveRejectBtnLogic(commands.Cog):
    def __init__(self, bot):
        self.bot = bot
        self.highstaff_role_id = highstaff  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ ID —Ä–æ–ª–∏ HighStaff

    @commands.Cog.listener("on_button_click")
    async def DefibrillatorApproveRejectBtnLogic(self, inter: disnake.MessageInteraction):
        if inter.component.custom_id not in ["DefibrillatorApprove", "DefibrillatorReject"]:
            return

        highstaff_role = disnake.utils.get(inter.guild.roles, id=self.highstaff_role_id)
        message_text = inter.message.content
        index = message_text.rfind("<")
        message_author = message_text[index + 2:-1]

        if highstaff_role not in inter.author.roles:
            emb = disnake.Embed(
                title="–û—à–∏–±–∫–∞",
                description="–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ —Ä–∞—Å—Å–º–∞—Ç—Ä–∏–≤–∞—Ç—å –∑–∞—è–≤–ª–µ–Ω–∏—è!",
                color=0xDA373C,
                timestamp=datetime.datetime.now()
            )
            await inter.response.send_message(embed=emb, ephemeral=True)
            return

        if inter.component.custom_id == "DefibrillatorApprove":
            #create link:
            discordid = config["discordServerID"]
            link = "https://discord.com/channels/" + str(discordid) + "/" + str(channel) + "/" + str(inter.message.id)
            cursor.execute('INSERT INTO DefibrillatorReport (received, issued, link) VALUES (?, ?, ?)', (message_author, inter.author.id, link))
            await inter.response.send_modal(modal=DefibrillatorReportModal())

            new_message_text = f"<@{inter.author.id}> –æ–¥–æ–±—Ä–∏–ª –∑–∞—è–≤–ª–µ–Ω–∏–µ –æ—Ç <@{message_author}>"
            await inter.followup.edit_message(
                inter.message.id,
                content=new_message_text,
                components=[
                    disnake.ui.Button(label="–û–¥–æ–±—Ä–µ–Ω–æ", disabled=True, style=disnake.ButtonStyle.success),
                    disnake.ui.Button(label="–ê–Ω–Ω—É–ª–∏—Ä–æ–≤–∞—Ç—å", style=disnake.ButtonStyle.secondary, custom_id="DefibrillatorCancel")
                ]
            )
        elif inter.component.custom_id == "DefibrillatorReject":
            new_message_text = f"<@{inter.author.id}> –æ—Ç–∫–ª–æ–Ω–∏–ª –∑–∞—è–≤–ª–µ–Ω–∏–µ –æ—Ç <@{message_author}>"
            await inter.response.edit_message(
                content=new_message_text,
                components=[
                    disnake.ui.Button(label="–û—Ç–∫–ª–æ–Ω–µ–Ω–æ", disabled=True, style=disnake.ButtonStyle.danger),
                    disnake.ui.Button(label="–ê–Ω–Ω—É–ª–∏—Ä–æ–≤–∞—Ç—å", style=disnake.ButtonStyle.secondary, custom_id="DefibrillatorCancel")
                ]
            )


class DefibrillatorCancelBtnLogic(commands.Cog):
    def __init__(self, bot):
        self.bot = bot
        self.highstaff_role_id = highstaff  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ ID —Ä–æ–ª–∏ HighStaff

    @commands.Cog.listener("on_button_click")
    async def DefibrillatorCancelBtnLogic(self, inter: disnake.MessageInteraction):
        if inter.component.custom_id != "DefibrillatorCancel":
            return

        highstaff_role = disnake.utils.get(inter.guild.roles, id=self.highstaff_role_id)

        if highstaff_role not in inter.author.roles:
            emb_error = disnake.Embed(
                title="–û—à–∏–±–∫–∞",
                description="–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –∞–Ω–Ω—É–ª–∏—Ä–æ–≤–∞—Ç—å —Ä–µ—à–µ–Ω–∏–µ —Å—Ç–∞—Ä—à–µ–≥–æ —Å–æ—Å—Ç–∞–≤–∞",
                color=0xDA373C,
                timestamp=datetime.datetime.now()
            )
            await inter.response.send_message(embed=emb_error, ephemeral=True)
            return

        message_text = inter.message.content
        index = message_text.rfind("<")
        new_message_text = f"<@&{self.highstaff_role_id}> —Ä–∞—Å—Å–º–æ—Ç—Ä–∏—Ç–µ –∑–∞—è–≤–ª–µ–Ω–∏–µ –æ—Ç {message_text[index:]}"
        await inter.response.edit_message(
            content=new_message_text,
            components=[
                disnake.ui.Button(label="–û–¥–æ–±—Ä–∏—Ç—å", style=disnake.ButtonStyle.success, custom_id="DefibrillatorApprove"),
                disnake.ui.Button(label="–û—Ç–∫–ª–æ–Ω–∏—Ç—å", style=disnake.ButtonStyle.danger, custom_id="DefibrillatorReject")
            ]
        )

# –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è cog-–æ–≤
def setup(bot):
    bot.add_cog(DefibrillatorApproveRejectBtnLogic(bot))
    bot.add_cog(DefibrillatorCancelBtnLogic(bot))
