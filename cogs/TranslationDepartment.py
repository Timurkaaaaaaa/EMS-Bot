import disnake
from disnake.ext import commands

import datetime
import json
import os

config_path = os.path.join(os.path.dirname(__file__), '..', 'config.json')

with open(config_path) as config:
    config = json.load(config)

channel = config['channels']['TranslationDepartment']
highstaff = config['roles']['HighStaff']


class TranslationDepartment(commands.Cog):
    def __init__(self, bot):
        self.bot = bot

    @commands.slash_command()
    async def –ø–µ—Ä–µ–≤–æ–¥(self, inter, –±—É–¥—É—â–∏–π_–æ—Ç–¥–µ–ª: disnake.Role):
        channel_id = inter.channel.id
        if channel_id != channel:
            error_emb = disnake.Embed(
                title="–û—à–∏–±–∫–∞",
                description=f"–î–∞–Ω–Ω—É—é –∫–æ–º–∞–Ω–¥—É –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ –≤ <#{channel}>",
                color = 0xDA373C,
                timestamp=datetime.datetime.now()
            )
            await inter.response.send_message(embed=error_emb, ephemeral=True)
        else:
            departments = config['roles']['departments'].values()
            department = ""
            for role in inter.author.roles:
                if role.id in departments:
                    department = str(role.id)
                    break
            if department == "":
                department = "–ù–µ –æ–ø—Ä–µ–¥–µ–ª—ë–Ω"
            embed = disnake.Embed(
                title="–ó–∞—è–≤–ª–µ–Ω–∏–µ –Ω–∞ –ø–µ—Ä–µ–≤–æ–¥",
                color = 0x2B2D31,
                timestamp=datetime.datetime.now()
            )
            if –±—É–¥—É—â–∏–π_–æ—Ç–¥–µ–ª.id in departments:
                embed.add_field(name="–ù—ã–Ω–µ—à–Ω–∏–π –æ—Ç–¥–µ–ª:", value=f"<@&{department}>")
                embed.add_field(name="–ë—É–¥—É—â–∏–π –æ—Ç–¥–µ–ª:", value=f"{–±—É–¥—É—â–∏–π_–æ—Ç–¥–µ–ª.mention}")
                channelObj = disnake.utils.get(inter.guild.channels, id=channel)
                await channelObj.send(f"<@&{highstaff}> —Ä–∞—Å—Å–º–æ—Ç—Ä–∏—Ç–µ –∑–∞–ø—Ä–æ—Å –æ—Ç {inter.author.mention}",embed=embed, components=[
                        disnake.ui.Button(label="–û–¥–æ–±—Ä–∏—Ç—å", style=disnake.ButtonStyle.success, custom_id="Approve"),
                        disnake.ui.Button(label="–û—Ç–∫–ª–æ–Ω–∏—Ç—å", style=disnake.ButtonStyle.danger, custom_id="Reject")
                    ],)
                await inter.send("**üü¢ –í—ã —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ –∑–∞–ø—Ä–æ—Å!**", ephemeral=True)
            else:
                error_embed = disnake.Embed(
                    title="–û—à–∏–±–∫–∞",
                    description="–†–∞–∑—Ä–µ—à–µ–Ω–æ —É–∫–∞–∑—ã–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ —Ä–æ–ª–∏ –æ—Ç–¥–µ–ª–æ–≤",
                    color = 0xDA373C,
                    timestamp=datetime.datetime.now()
                )
                text = ""
                for role in departments:
                    text = text + "\n<@&" + str(role) +">"
                error_embed.add_field(name="–†–∞–∑—Ä–µ—à—ë–Ω–Ω—ã–µ —Ä–æ–ª–∏:", value=f"{text}")
                await inter.response.send_message(ephemeral=True, embed=error_embed)




def setup(bot: commands.Bot):
    bot.add_cog(TranslationDepartment(bot))
